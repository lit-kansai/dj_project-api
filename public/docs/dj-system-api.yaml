openapi: 3.0.0
info:
  title: DJ System API
  version: 1.0.0
  description: MC支援サービス「DJ System」用API<br>
    <h3>使い方</h3>
    1. /mc/authを使ってログインする<br>
    2. 右上にあるAuthorizeをクリックして取得したAPIトークンを入力する<br>
    3. 各種APIを検証する
servers:
  - url: "/"
tags:
  - name: /room
    description: 公開API
  - name: /mc/auth
    description: 認証 / ログイン
  - name: /mc/user
    description: ユーザ関連API
  - name: /mc/room
    description: Roomの管理
paths:
  /room/{room_id}:
    get:
      summary: Room情報表示
      tags:
        - /room
      parameters:
        - $ref: "#/components/parameters/room_id"
      responses:
        "200":
          description: Roomの情報が返される
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/room_display_id"
                  name:
                    $ref: "#/components/schemas/room_name"
                  description:
                    $ref: "#/components/schemas/description"
                  room_cooltime:
                    $ref: "#/components/schemas/room_cooltime"
        "404":
          $ref: "#/components/responses/NotFound"
  /room/{room_id}/music/top:
    get:
      summary: 人気曲リストを取得
      tags:
        - /room
      parameters:
        - $ref: "#/components/parameters/room_id"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Track"
        "400":
          $ref: "#/components/responses/UnsupportedProvider"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/ProviderIsNotLinked"
        "404":
          $ref: "#/components/responses/NotFound"
  /room/{room_id}/music/search:
    get:
      summary: 音楽検索
      tags:
        - /room
      parameters:
        - $ref: "#/components/parameters/room_id"
        - $ref: "#/components/parameters/query"
      responses:
        "200":
          description: 音楽情報の配列
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Track"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/ProviderIsNotLinked"
        "404":
          $ref: "#/components/responses/NotFound"
  /room/{room_id}/request:
    post:
      summary: リクエスト送信
      tags:
        - /room
      parameters:
        - $ref: "#/components/parameters/room_id"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/spotify_request"
                - $ref: "#/components/schemas/applemusic_request"
            examples:
              response1:
                summary: Spotify
                value:
                  musics: ["spotify:track:67T4aWFCAbMNWKamvI3piH"]
                  radio_name: "テク子"
                  message: "流れるの楽しみにしてます！"
              response2:
                summary: AppleMusic
                value:
                  musics: ["1464635122"]
                  radio_name: "テク子"
                  message: "流れるの楽しみにしてます！"
      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/ProviderIsNotLinked"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /mc/auth/signin:
    get:
      summary: Step.1 Googleログイン用URLの発行
      tags:
        - /mc/auth
      parameters:
        - $ref: "#/components/parameters/google_redirect_url"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect_url:
                    $ref: "#/components/schemas/login_url"
                required:
                  - redirect_url
        "400":
          $ref: "#/components/responses/BadRequest"
  /mc/auth/signin/callback:
    post:
      summary: Step.2 Googleログイン用Callback
      tags:
        - /mc/auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                redirect_url:
                  $ref: "#/components/schemas/redirect_url"
                code:
                  $ref: "#/components/schemas/code"
              required:
                - redirect_url
                - code
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_token:
                    $ref: "#/components/schemas/api_token"
                  user_id:
                    $ref: "#/components/schemas/user_id"
                required:
                  - api_token
                  - user_id
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /mc/user:
    get:
      summary: ユーザー情報取得
      tags:
        - /mc/user
      security:
        - ApiToken: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: ユーザー削除
      tags:
        - /mc/user
      security:
        - ApiToken: []
      responses:
        "200":
          $ref: "#/components/responses/OK"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /mc/user/link/spotify:
    get:
      summary: Step.1 Spotify連携ログイン用URLの発行
      tags:
        - /mc/user
      security:
        - ApiToken: []
      parameters:
        - $ref: "#/components/parameters/spotify_redirect_url"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect_url:
                    $ref: "#/components/schemas/login_url"
                required:
                  - redirect_url
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: Spotifyアカウントの連携解除
      tags:
        - /mc/user
      security:
        - ApiToken: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect_url:
                    $ref: "#/components/schemas/login_url"
                required:
                  - redirect_url
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /mc/user/link/spotify/callback:
    post:
      summary: Step.2 Spotify連携ログイン用Callback
      tags:
        - /mc/user
      security:
        - ApiToken: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                redirect_url:
                  $ref: "#/components/schemas/redirect_url"
                code:
                  $ref: "#/components/schemas/code"
              required:
                - redirect_url
                - code
      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /mc/user/link/applemusic:
    get:
      summary: Step.1 AppleMusic連携ログイン用URLの発行
      tags:
        - /mc/user
      security:
        - ApiToken: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    $ref: "#/components/schemas/access_token"
                required:
                  - access_token
  /mc/user/link/applemusic/callback:
    post:
      summary: Step.2 AppleMusic連携ログイン用Callback
      tags:
        - /mc/user
      security:
        - ApiToken: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                music_user_token:
                  $ref: "#/components/schemas/music_user_token"
                access_token:
                  $ref: "#/components/schemas/access_token"
              required:
                - music_user_token
                - access_token
      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /mc/user/playlist:
    get:
      summary: 連携している音楽サービスのプレイリスト一覧を取得
      tags:
        - /mc/user
      security:
        - ApiToken: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Playlist"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /mc/user/playlist/{provider_name}:
    get:
      summary: 指定した音楽サービスのプレイリスト一覧を取得
      tags:
        - /mc/user
      parameters:
        - $ref: "#/components/parameters/provider_name"
      security:
        - ApiToken: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Playlist"
        "400":
          $ref: "#/components/responses/UnsupportedProvider"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/ProviderIsNotLinked"
    post:
      summary: 指定した音楽サービスのプレイリストを作成
      tags:
        - /mc/user
      parameters:
        - $ref: "#/components/parameters/provider_name"
      security:
        - ApiToken: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/provider_playlist_name"
                description:
                  $ref: "#/components/schemas/provider_playlist_description"
              required:
                - name
                - description
      responses:
        "200":
          $ref: "#/components/responses/OKWithId"
        "400":
          $ref: "#/components/responses/BadRequestOrUnsupportedProvider"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/ProviderIsNotLinked"
  /mc/user/playlist/{provider_name}/{playlist_id}:
    get:
      summary: 指定したプレイリストの楽曲一覧を取得
      tags:
        - /mc/user
      parameters:
        - $ref: "#/components/parameters/provider_name"
        - $ref: "#/components/parameters/playlist_id"
      security:
        - ApiToken: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Track"
        "400":
          $ref: "#/components/responses/UnsupportedProvider"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/ProviderIsNotLinked"
  /mc/room:
    get:
      summary: 自身管理下のRoom一覧取得
      tags:
        - /mc/room
      security:
        - ApiToken: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Room"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      summary: Room作成
      tags:
        - /mc/room
      security:
        - ApiToken: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url_name:
                  $ref: "#/components/schemas/room_display_id"
                room_name:
                  $ref: "#/components/schemas/room_name"
                description:
                  $ref: "#/components/schemas/description"
                provider:
                  $ref: "#/components/schemas/provider"
                playlist_id:
                  $ref: "#/components/schemas/provider_playlist_id"
              required:
                - url_name
                - room_name
                - description
                - provider
      responses:
        "200":
          description: 作成されたRoom情報が返される
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/room_unique_id"
                  owner_user_id:
                    $ref: "#/components/schemas/owner_user_id"
                  display_id:
                    $ref: "#/components/schemas/room_display_id"
                  name:
                    $ref: "#/components/schemas/room_name"
                  description:
                    $ref: "#/components/schemas/description"
                  playlist_id:
                    $ref: "#/components/schemas/provider_playlist_id"
                  provider:
                    $ref: "#/components/schemas/provider"
                  room_cooltime:
                    $ref: "#/components/schemas/room_cooltime"
                  created_at:
                    $ref: "#/components/schemas/created_at"
                  updated_at:
                    $ref: "#/components/schemas/updated_at"
        "400":
          $ref: "#/components/responses/BadRequestOrAlreadyExists"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/ProviderIsNotLinked"
        "500":
          description: Roomの作成に失敗した
  /mc/room/{room_id}:
    get:
      summary: Room情報表示
      tags:
        - /mc/room
      security:
        - ApiToken: []
      parameters:
        - $ref: "#/components/parameters/room_id"
      responses:
        "200":
          description: Roomの詳細情報が返される
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetailedRoom"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      summary: Room情報更新
      tags:
        - /mc/room
      security:
        - ApiToken: []
      parameters:
        - $ref: "#/components/parameters/room_id"
      requestBody:
        description: created_atとupdated_atは自動設定
        content:
          application/json:
            schema:
              type: object
              properties:
                url_name:
                  $ref: "#/components/schemas/room_display_id"
                room_name:
                  $ref: "#/components/schemas/room_name"
                description:
                  $ref: "#/components/schemas/description"
                room_cooltime:
                  $ref: "#/components/schemas/room_cooltime"
      responses:
        "200":
          description: 更新後のRoom情報が返される
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
        "400":
          $ref: "#/components/responses/BadRequestOrAlreadyExists"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          description: Roomの更新に失敗した
    delete:
      summary: Room削除
      tags:
        - /mc/room
      security:
        - ApiToken: []
      parameters:
        - $ref: "#/components/parameters/room_id"
      responses:
        "200":
          $ref: "#/components/responses/OK"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /mc/room/{room_id}/letters:
    get:
      summary: Room内のお便り情報取得
      tags:
        - /mc/room
      security:
        - ApiToken: []
      parameters:
        - $ref: "#/components/parameters/room_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LetterWithMusics"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /mc/room/{room_id}/letter/{letterId}:
    delete:
      summary: Room内のお便り削除
      tags:
        - /mc/room
      security:
        - ApiToken: []
      parameters:
        - $ref: "#/components/parameters/room_id"
        - $ref: "#/components/parameters/letter_id"
      responses:
        "200":
          $ref: "#/components/responses/OK"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /mc/room/{room_id}/musics:
    get:
      summary: Room内の音楽情報取得
      tags:
        - /mc/room
      security:
        - ApiToken: []
      parameters:
        - $ref: "#/components/parameters/room_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MusicWithLetter"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /mc/room/{room_id}/music/{musicId}:
    delete:
      summary: 音楽削除
      tags:
        - /mc/room
      security:
        - ApiToken: []
      parameters:
        - $ref: "#/components/parameters/room_id"
        - $ref: "#/components/parameters/music_id"
      responses:
        "200":
          $ref: "#/components/responses/OK"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /mc/room/{room_id}/playlist:
    get:
      summary: ルームに連携されているプレイリストの楽曲一覧を取得
      tags:
        - /mc/room
      parameters:
        - $ref: "#/components/parameters/room_id"
      security:
        - ApiToken: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Track"
        "400":
          $ref: "#/components/responses/UnsupportedProvider"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/ProviderIsNotLinked"
        "404":
          $ref: "#/components/responses/NotFound"
  /mc/room/{room_id}/playlist/music:
    post:
      summary: ルームに連携されているプレイリストに楽曲を追加
      tags:
        - /mc/room
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                music_id:
                  $ref: "#/components/schemas/provided_music_id"
              required:
                - music_id
      parameters:
        - $ref: "#/components/parameters/room_id"
      security:
        - ApiToken: []
      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          $ref: "#/components/responses/BadRequestOrUnsupportedProvider"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/ProviderIsNotLinked"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      summary: ルームに連携されているプレイリストから楽曲を削除
      tags:
        - /mc/room
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                music_id:
                  $ref: "#/components/schemas/provided_music_id"
              required:
                - music_id
      parameters:
        - $ref: "#/components/parameters/room_id"
      security:
        - ApiToken: []
      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          $ref: "#/components/responses/BadRequestOrUnsupportedProvider"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/ProviderIsNotLinked"
        "404":
          $ref: "#/components/responses/NotFound"

components:
  parameters:
    room_id:
      name: room_id
      in: path
      description: Room表示ID
      example: dj_event_a_22
      required: true
      schema:
        type: string
    letter_id:
      name: letterId
      in: path
      description: お便りID
      required: true
      schema:
        type: string
    music_id:
      name: musicId
      in: path
      description: 音楽ID
      required: true
      schema:
        type: string
    query:
      in: query
      name: q
      description: 検索キーワード
      example: ray
      schema:
        type: string
      required: true
    limit:
      in: query
      name: limit
      description: 返ってくる曲数(max50)
      example: 12
      schema:
        type: string
      required: false
    google_redirect_url:
      in: query
      name: redirect_url
      schema:
        type: string
        format: url
      required: true
      example: http://localhost:3000/api/google/callback
      description: ログイン成功時のリダイレクトURL
    spotify_redirect_url:
      in: query
      name: redirect_url
      schema:
        type: string
        format: url
      required: true
      example: http://localhost:3000/api/spotify/callback
      description: ログイン成功時のリダイレクトURL
    provider_name:
      name: provider_name
      in: path
      description: プロバイダ識別子
      example: spotify
      required: true
      schema:
        type: string
    playlist_id:
      name: playlist_id
      in: path
      description: プレイリストID
      example: 6NccF6KB
      required: true
      schema:
        type: string

  schemas:
    User:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/user_id"
        google_id:
          $ref: "#/components/schemas/google_id"
        email:
          $ref: "#/components/schemas/email"
        name:
          $ref: "#/components/schemas/name"
        icon:
          $ref: "#/components/schemas/icon"
        is_admin:
          $ref: "#/components/schemas/is_admin"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        linked_providers:
          type: array
          items:
            $ref: "#/components/schemas/linked_provider"
      required:
        - id
        - google_id
        - email
        - name
        - icon
        - is_admin
        - created_at
        - updated_at
        - linked_provider

    Room:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/room_unique_id"
        owner_user_id:
          $ref: "#/components/schemas/owner_user_id"
        display_id:
          $ref: "#/components/schemas/room_display_id"
        name:
          $ref: "#/components/schemas/room_name"
        description:
          $ref: "#/components/schemas/description"
        playlist_id:
          $ref: "#/components/schemas/provider_playlist_id"
        provider:
          $ref: "#/components/schemas/provider"
        room_cooltime:
          $ref: "#/components/schemas/room_cooltime"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_at:
          $ref: "#/components/schemas/updated_at"
      required:
        - id
        - owner_user_id
        - display_id
        - name
        - description
        - room_cooltime
        - created_at
        - updated_at

    DetailedRoom:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/room_unique_id"
        owner_user_id:
          $ref: "#/components/schemas/owner_user_id"
        display_id:
          $ref: "#/components/schemas/room_display_id"
        name:
          $ref: "#/components/schemas/room_name"
        description:
          $ref: "#/components/schemas/description"
        playlist_id:
          $ref: "#/components/schemas/provider_playlist_id"
        provider:
          $ref: "#/components/schemas/provider"
        room_cooltime:
          $ref: "#/components/schemas/room_cooltime"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"
        musics:
          type: array
          items:
            $ref: "#/components/schemas/MusicWithLetter"
        letters:
          type: array
          items:
            $ref: "#/components/schemas/LetterWithMusics"
      required:
        - id
        - owner_user_id
        - display_id
        - name
        - description
        - room_cooltime
        - created_at
        - updated_at
        - users
        - musics
        - letters

    Letter:
      type: object
      description: お便り
      properties:
        id:
          $ref: "#/components/schemas/letter_unique_id"
        room_id:
          $ref: "#/components/schemas/room_unique_id"
        radio_name:
          $ref: "#/components/schemas/radio_name"
        message:
          $ref: "#/components/schemas/message"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_at:
          $ref: "#/components/schemas/updated_at"
      required:
        - id
        - room_id
        - radio_name
        - message
        - created_at
        - updated_at

    Track:
      type: object
      description: 楽曲情報
      properties:
        id:
          $ref: "#/components/schemas/provided_music_id"
        artists:
          $ref: "#/components/schemas/artists"
        album:
          $ref: "#/components/schemas/album"
        name:
          $ref: "#/components/schemas/music_name"
        thumbnail:
          $ref: "#/components/schemas/thumbnail"
        duration:
          $ref: "#/components/schemas/duration"
      required:
        - id
        - artists
        - album
        - name
        - thumbnail
        - duration

    Music:
      type: object
      description: リクエストに保存される曲情報
      properties:
        id:
          $ref: "#/components/schemas/music_unique_id"
        provided_music_id:
          $ref: "#/components/schemas/provided_music_id"
        letter_id:
          $ref: "#/components/schemas/letter_unique_id"
        artists:
          $ref: "#/components/schemas/artists"
        album:
          $ref: "#/components/schemas/album"
        name:
          $ref: "#/components/schemas/music_name"
        thumbnail:
          $ref: "#/components/schemas/thumbnail"
        duration:
          $ref: "#/components/schemas/duration"
      required:
        - id
        - provided_music_id
        - artists
        - album
        - name
        - thumbnail
        - duration
        - created_at
        - updated_at

    LetterWithMusics:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/letter_unique_id"
        room_id:
          $ref: "#/components/schemas/room_unique_id"
        radio_name:
          $ref: "#/components/schemas/radio_name"
        message:
          $ref: "#/components/schemas/message"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        musics:
          type: array
          items:
            $ref: "#/components/schemas/Music"
      required:
        - id
        - room_id
        - radio_name
        - message
        - created_at
        - updated_at
        - musics

    MusicWithLetter:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/music_unique_id"
        provided_music_id:
          $ref: "#/components/schemas/provided_music_id"
        letter_id:
          $ref: "#/components/schemas/letter_unique_id"
        artists:
          $ref: "#/components/schemas/artists"
        album:
          $ref: "#/components/schemas/album"
        name:
          $ref: "#/components/schemas/music_name"
        thumbnail:
          $ref: "#/components/schemas/thumbnail"
        duration:
          $ref: "#/components/schemas/duration"
        letter:
          $ref: "#/components/schemas/Letter"
      required:
        - id
        - provided_music_id
        - artists
        - album
        - name
        - thumbnail
        - duration
        - created_at
        - updated_at
        - letter

    Playlist:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/provider_playlist_id"
        name:
          $ref: "#/components/schemas/provider_playlist_name"
        image_url:
          $ref: "#/components/schemas/provider_playlist_thumbnail"
        description:
          $ref: "#/components/schemas/provider_playlist_description"
        provider:
          $ref: "#/components/schemas/provider"
      required:
        - id
        - name
        - image_url
        - description
        - provider

    spotify_request:
      type: object
      properties:
        musics:
          type: array
          items:
            $ref: "#/components/schemas/provided_music_id"
        radio_name:
          $ref: "#/components/schemas/radio_name"
        message:
          $ref: "#/components/schemas/message"
      required:
        - musics
    applemusic_request:
      type: object
      properties:
        musics:
          type: array
          items:
            $ref: "#/components/schemas/provided_applemusic_id"
        radio_name:
          $ref: "#/components/schemas/radio_name"
        message:
          $ref: "#/components/schemas/message"
      required:
        - musics

    # OAuth
    redirect_url:
      type: string
      format: url
      description: リダイレクトURL
    login_url:
      type: string
      format: url
      description: ログイン用URL
    code:
      type: string
      format: string
      description: コールバックURLにパラメータとして含まれているコード（要URLデコード）
    api_token:
      type: string
      format: string
      description: APIトークン
    music_user_token:
      type: string
      format: string
      description: MusicUserトークン
    access_token:
      type: string
      format: string
      description: AppleMusicのアクセストークン

    # User
    user_id:
      type: number
      format: number
      description: UserID
      example: 1
    google_id:
      type: string
      format: string
      description: GoogleUserID
      example: "999999999999999999999"
    email:
      type: string
      format: email
      description: Eメールアドレス
      example: mail@example.com
    name:
      type: string
      format: string
      description: ユーザー名
      example: 来福 テク子
    icon:
      type: string
      format: url
      description: アイコンURL
      example: https://github.com/lit-kansai.png
    is_admin:
      type: boolean
      format: boolean
      description: adminフラグ
      example: true
    linked_provider:
      type: object
      properties:
        provider:
          type: string
          format: string
          description: 音楽サービスの種類（"spotify" or "applemusic")
        is_connected:
          type: boolean
          format: boolean
          description: 連携されているかどうか
      example:
        provider: spotify
        is_connected: true
      required:
        - provider
        - is_connected

    # Room
    room_unique_id:
      type: number
      format: number
      description: RoomID
    room_display_id:
      type: string
      example: dj_event_a_22
      description: Room表示ID（URLのIDになる）
    room_name:
      type: string
      example: DJ EVENT A
      description: Room名（ページに表示される）
    description:
      type: string
      example: イベントA 22年
      description: Room概要（管理画面用のメモ）
    provider:
      type: string
      example: spotify
      description: 連携するストリーミングサービスの識別子。
    owner_user_id:
      type: integer
      description: オーナーのユーザーID(プレイリストを紐づけている人)
      example: 1
    room_cooltime:
      type: integer
      example: 300
      description: ユーザーがリクエストを投稿後、再度リクエスト出来るまでの時間

    # Letter
    letter_unique_id:
      type: string
      description: お便りID
    radio_name:
      type: string
      example: テク子
      description: ラジオネーム
    message:
      type: string
      example: 流れるの楽しみにしてます！
      description: お便り本文

    # Music
    music_unique_id:
      type: number
      example: 1
      description: MusicID
    provided_music_id:
      type: string
      example: spotify:track:67T4aWFCAbMNWKamvI3piH
      description: 音楽サービスの曲ID
    provided_applemusic_id:
      type: string
      example: "1464635122"
      description: 音楽サービスの曲ID
    artists:
      type: string
      example: BUMP OF CHICKEN, 初音ミク
      description: アーティスト名
    album:
      type: string
      example: ray
      description: アルバム名
    music_name:
      type: string
      example: ray
      description: 曲名
    thumbnail:
      type: string
      format: url
      example: https://i.scdn.co/image/ab67616d0000b2731bc3a96706495fb0a1dbdffd
      description: サムネイル画像URL
    duration:
      type: string
      example: 300
      description: 曲の長さ（秒）

    # Playlist
    provider_playlist_id:
      type: string
      description: 音楽サービスのプレイリストID
      example: MGsb9KPq
    provider_playlist_name:
      type: string
      description: プレイリスト名
      example: DJ EVENT A
    provider_playlist_thumbnail:
      type: string
      format: url
      description: プレイリストのサムネイル画像URL
      example: DJ EVENT A
    provider_playlist_description:
      type: string
      description: プレイリスト概要
      example: イベントA 22年 - Generated by DJ Gassi

    # DB汎用
    created_at:
      type: string
      format: date
      description: 作成日時
      example: "2022-10-06T07:10:04.799Z"
    updated_at:
      type: string
      format: date
      description: 更新日時
      example: "2022-10-06T07:10:04.799Z"

    Error:
      type: object
      properties:
        code:
          type: string
          description: エラーコード
        message:
          type: string
          description: エラーメッセージ

  securitySchemes:
    ApiToken:
      type: apiKey
      in: header
      name: api_token
      description: APIトークン

  responses:
    OK:
      description: 要求に成功した
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                format: boolean
                description: 成功したか
                example: true
    OKWithId:
      description: 要求に成功した
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                format: boolean
                description: 成功したか
                example: true
              id:
                type: string
                format: string
                description: 作成した要素のID
                example: 1
    NotFound:
      description: 対象が見つからなかった
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            NotFound Error:
              value:
                code: "404"
                message: "Error message"
    UnsupportedProvider:
      description: 対応していない音楽サービスを指定した
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            UnsupportedProvider Error:
              value:
                code: "400"
                message: "Error message"
    Unauthorized:
      description: 認証情報が正しくない
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            Unauthorized Error:
              value:
                code: "401"
                message: "Error message"
    ProviderIsNotLinked:
      description: プロバイダが連携されていない
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            Unauthorized Error:
              value:
                code: "401"
                message: "Error message"
    BadRequest:
      description: リクエストボディが正しくない
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            BadRequest Error:
              value:
                code: "400"
                message: "Error message"
    BadRequestOrAlreadyExists:
      description: リクエストボディが正しくない、もしくは指定したIDが既に存在している
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            BadRequestError:
              value:
                code: "400"
                message: "Error message"
    BadRequestOrUnsupportedProvider:
      description: リクエストボディが正しくない、もしくは対応していない音楽サービスを指定した
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            BadRequestError:
              value:
                code: "400"
                message: "Error message"
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            InternalServerError:
              value:
                code: "500"
                message: "Error message"
